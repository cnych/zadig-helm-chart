{{- if (include "mongodb.createTlsSecret" .) }}
{{- $fullname := include "mongodb.fullname" . }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $cn := printf "%s.%s.svc.%s" $fullname .Release.Namespace $clusterDomain}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "mongodb.tlsSecretName" . }}
  namespace: {{ template "mongodb.namespace" . }}
  labels:
   {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: mongodb
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: Opaque
data:
  {{- $ca:= genCA "myMongo-ca" 3650 }}
  {{- if or .Values.tls.caCert .Values.tls.caKey (not .Values.tls.autoGenerated) }}
  {{- $ca := buildCustomCert (required "A valid .Values.tls.caCert is required!" .Values.tls.caCert) (required "A valid .Values.tls.caKey is required!" .Values.tls.caKey) }}
  {{- end }}
  {{- $cert := genSignedCert $cn nil nil 3650 $ca }}
  {{- $pem := printf "%s%s" $cert.Cert $cert.Key }}
  mongodb-ca-cert: {{ b64enc $ca.Cert }}
  mongodb-ca-key: {{ b64enc $ca.Key }}
  client-pem: {{ b64enc $pem }}
{{- end }}
